# Default values for blackbox-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


operatorConfig: |
  logLevel: "info"
  defaultModule: "http_2xx"
  interval: "30s"
  scrapeTimeout: "1s"
  protocolModuleMappings:
    TCP: tcp_connect
  exclude:
    matchLabels:
      blackbox-operator-scrape: skip
  hostMappings:
  - host: dex.sys.dev.internal.com
    port: 443
    replacePattern: dex.sys.dev.internal.com
    replaceWith: dex.sys.dev.internal.com/healthz
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-blackbox-exporter
image:
  repository: schmiddim/blackbox-operator
  pullPolicy: IfNotPresent
  # https://hub.docker.com/r/schmiddim/blackbox-operator/tags
  tag: "ce63a67fea9dc93faa5e800f4c36708ca9a7905d"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8081

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 100Mi
  requests:
    cpu: 50m
    memory: 50Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts: {}
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}